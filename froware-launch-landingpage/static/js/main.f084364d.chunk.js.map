{"version":3,"sources":["styles/globals.js","components/Header/Button.js","components/Logo.js","components/Header/index.js","components/Section/CentredSection.js","components/Section/RightTextSection.js","components/Section/LeftTextSection.js","components/Section/EmbeddedForm.js","components/Chevron.js","components/Button/index.js","components/Section/index.js","components/Sections/index.js","content.js","assets/awareness.svg","assets/support.svg","assets/progression.svg","assets/proficiency.svg","assets/team.svg","assets/facebook.svg","assets/instagram.svg","assets/linkedin.svg","assets/twitter.svg","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["GlobalStyle","createGlobalStyle","StyledButton","styled","button","Button","text","Logo","fill","width","height","viewBox","xmlns","data-testid","d","StyledHeader","div","StyledLogo","span","Header","buttonText","Title","h1","Container","CentredSection","title","body","map","index","TextWrapper","Image","img","RightTextSection","image","src","alt","MobileView","DesktopView","LeftTextSection","useState","isSmallerScreen","setIsSmallerScreen","resizeHandler","window","innerWidth","useEffect","addEventListener","removeEventListener","Text","Children","EmbeddedForm","children","Chevron","clipPath","id","transform","onClick","sectionId","Wrapper","alignment","handleBackgroundColour","Section","React","forwardRef","ref","section","SECTIONS","centre","left","right","none","Sections","sections","refs","forEach","_","push","createRef","handleClick","console","log","length","current","scrollIntoView","behavior","block","content","headerButton","footer","blurb","social","facebook","instagram","twitter","linkedin","InnerWrapper","SocialMedias","ICONS","Facebook","Instagram","Linkedin","Twitter","Footer","Object","entries","key","value","href","App","charSet","rel","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f084364d.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html,\n  body {\n    padding: 0;\n    margin: 0;\n    font-family: 'Nunito Sans', sans-serif;\n    font-size: 22px;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  h1 {\n    font-size: 40px;\n    font-weight: 900;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst StyledButton = styled.button`\n  background: white;\n  border: 2px solid #000;\n  border-radius: 100px;\n  grid-column: 10/12;\n  height: 50px;\n  justify-self: end;\n  text-transform: uppercase;\n  width: 132px;\n\n  @media (min-width: 1024px) {\n    width: 176px;\n  }\n`;\n\nconst Button = ({ text }) => <StyledButton>{text}</StyledButton>;\n\nButton.propTypes = {\n  text: PropTypes.string,\n};\n\nexport default Button;\n","import React from 'react';\nconst Logo = ({ fill }) => (\n  <svg\n    width='201'\n    height='41'\n    viewBox='0 0 201 41'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg' data-testid=\"Froware Logo\">\n    <path\n      d='M58.2881 14.7373L57.818 11.1475H47.3826V28.53H51.5191V21.7281H57.536V18.3272H51.5191V14.7373H58.2881Z'\n      fill={fill}\n    />\n    <path\n      d='M80.1931 16.7212C80.1931 12.9424 78.0308 11.1475 73.6122 11.1475H67.4073V28.53H71.732V22.106H73.1421L77.3727 28.53H81.7913L81.9794 28.0576L77.1847 21.3502C79.065 20.5945 80.1931 18.9885 80.1931 16.7212ZM73.3302 18.894H71.6379V14.6429H73.3302C75.2104 14.6429 76.0566 15.3041 76.0566 16.8157C76.0566 18.2327 75.2104 18.894 73.3302 18.894Z'\n      fill={fill}\n    />\n    <path\n      d='M98.3377 10.6751C92.885 10.6751 88.9364 14.5484 88.9364 19.8387C88.9364 25.0346 92.979 29.0023 98.3377 29.0023C103.79 29.0023 107.739 25.0346 107.739 19.8387C107.739 14.5484 103.79 10.6751 98.3377 10.6751ZM98.3377 25.129C95.5173 25.129 93.355 22.8618 93.355 19.9332C93.355 16.9101 95.5173 14.7373 98.3377 14.7373C101.158 14.7373 103.32 16.9101 103.32 19.9332C103.32 22.8618 101.158 25.129 98.3377 25.129Z'\n      fill={fill}\n    />\n    <path\n      d='M133.123 20.5L131.9 24.4677H131.806C131.336 23.1452 130.866 21.8226 130.396 20.5L127.106 11.2419H126.542L123.251 20.5C122.781 21.8226 122.311 23.1452 121.841 24.4677H121.747L120.525 20.5L117.704 11.1475H115.636L121.089 28.9078H122.311L125.696 19.5553C126.072 18.4217 126.542 17.288 126.918 16.1544H127.012C127.388 17.288 127.858 18.4217 128.234 19.5553L131.524 28.9078H132.746L138.199 11.1475H136.037L133.123 20.5Z'\n      fill={fill}\n    />\n    <path\n      d='M152.207 11.1475L144.686 28.5299H146.848L148.729 23.9009H157.096L158.976 28.5299H161.138L153.711 11.1475H152.207ZM156.532 22.2005H149.575L151.831 16.6267C152.301 15.4931 152.677 14.5484 153.053 13.6037H153.147C153.523 14.5484 153.899 15.3986 154.37 16.6267L156.532 22.2005Z'\n      fill={fill}\n    />\n    <path\n      d='M180.411 16.0599C180.411 12.7535 178.343 11.1475 174.77 11.1475H169.788V28.5299H171.856V20.8779H174.676L180.035 28.5299H182.103L182.291 28.1521L176.839 20.5945C179.095 20.0276 180.411 18.3272 180.411 16.0599ZM174.206 19.0829H171.762V13.0369H174.206C177.027 13.0369 178.343 13.8871 178.343 16.1544C178.343 18.2327 177.121 19.0829 174.206 19.0829Z'\n      fill={fill}\n    />\n    <path\n      d='M192.915 20.5945H200.436V18.7051H192.915V13.0369H201L200.812 11.1475H190.847V28.5299H200.812L201 26.6405H192.915V20.5945Z'\n      fill={fill}\n    />\n    <path\n      d='M15.3242 0.09447C12.5038 0.09447 10.1534 2.45622 10.1534 5.29032C10.1534 6.51843 10.6235 7.65207 11.2816 8.5023L10.5295 11.4309L13.2559 10.0138C13.914 10.2972 14.5721 10.3917 15.3242 10.3917H25.6656C28.486 10.3917 30.8363 8.02995 30.8363 5.19585C30.8363 2.36175 28.486 0 25.6656 0C25.6656 0.09447 15.3242 0.09447 15.3242 0.09447Z'\n      fill={fill}\n    />\n    <path\n      d='M10.3414 11.5253H3.00842C1.31618 11.5253 0 12.8479 0 14.5484V16.7212V18.894V33.5369V35.7097V37.8825V40.9055H7.33302C9.02526 40.9055 10.3414 39.5829 10.3414 37.8825V35.7097V33.5369V31.4585H13.3499H20.6829V28.4355V24.0899C20.6829 22.3894 19.3667 21.0668 17.6745 21.0668H13.3499H10.3414V18.9885V16.8157V14.6429V11.5253Z'\n      fill={fill}\n    />\n  </svg>\n);\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport Logo from '../Logo';\n\nconst StyledHeader = styled.div`\n  align-items: center;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  height: 76px;\n`;\n\nconst StyledLogo = styled.span`\n  grid-column: 2/5;\n  svg {\n    width: 140px;\n  }\n\n  @media (min-width: 1024px) {\n    svg {\n      width: 100%;\n    }\n  }\n`;\n\nconst Header = ({ buttonText }) => (\n  <StyledHeader>\n    <StyledLogo>\n      <Logo fill='#000' />\n    </StyledLogo>\n    <Button text={buttonText} />\n  </StyledHeader>\n);\n\nHeader.propTypes = {\n  buttonText: PropTypes.string,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst Container = styled.div`\n  grid-column: 2/12;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n\n  @media (min-width: 1024px) {\n    /* display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    justify-items: center;\n    align-items: center;\n    height: 745px; */\n  }\n`;\n\nconst CentredSection = ({ title, body }) => (\n  <Container>\n    <Title>{title}</Title>\n    {body.map((text, index) => (\n      <p key={`${index}-${title}`} data-testid='section-text'>\n        {text}\n      </p>\n    ))}\n  </Container>\n);\n\nCentredSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.array.isRequired,\n};\n\nexport default CentredSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst TextWrapper = styled.div`\n  grid-column: 2/12;\n\n  @media (min-width: 1024px) {\n    grid-column: 6/12;\n  }\n`;\n\nconst Image = styled.img`\n  grid-column: 2/12;\n  width: 100%;\n  padding-top: 30px;\n\n  @media (min-width: 1024px) {\n    grid-column: 2/6;\n    padding: 80px 0;\n  }\n`;\n\nconst RightTextSection = ({ title, body, image }) => {\n  return (\n    <>\n      <Image src={image} alt={title} />\n      <TextWrapper>\n        <h1>{title}</h1>\n        {body.map((text, index) => (\n          <p key={`${index}-${title}`} data-testid='section-text'>\n            {text}\n          </p>\n        ))}\n      </TextWrapper>\n    </>\n  );\n};\n\nRightTextSection.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.array.isRequired,\n};\n\nexport default RightTextSection;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst TextWrapper = styled.div`\n  grid-column: 2/12;\n\n  @media (min-width: 1024px) {\n    grid-column: 2/7;\n  }\n`;\n\nconst Image = styled.img`\n  grid-column: 2/12;\n  width: 100%;\n  padding-top: 30px;\n\n  @media (min-width: 1024px) {\n    grid-column: 7/12;\n    padding: 80px 0;\n  }\n`;\n\nconst MobileView = ({ title, body, image }) => (\n  <>\n    <Image src={image} alt={title} />\n\n    <TextWrapper>\n      <h1>{title}</h1>\n      {body.map((text, index) => (\n        <p key={`${index}-${title}`} data-testid='section-text'>\n          {text}\n        </p>\n      ))}\n    </TextWrapper>\n  </>\n);\n\nconst DesktopView = ({ title, body, image }) => (\n  <>\n    <TextWrapper>\n      <h1>{title}</h1>\n      {body.map((text, index) => (\n        <p key={`${index}-${title}`} data-testid='section-text'>\n          {text}\n        </p>\n      ))}\n    </TextWrapper>\n    <Image src={image} alt={title} />\n  </>\n);\n\nconst LeftTextSection = ({ title, body, image }) => {\n  const [isSmallerScreen, setIsSmallerScreen] = useState(false);\n  const resizeHandler = () => setIsSmallerScreen(window.innerWidth < 1024);\n\n  useEffect(() => {\n    setIsSmallerScreen(window.innerWidth < 1300);\n    window.addEventListener('resize', resizeHandler);\n    return () => window.removeEventListener('resize', resizeHandler);\n  }, []);\n\n  return (\n    <>\n      {isSmallerScreen ? (\n        <MobileView title={title} body={body} image={image} />\n      ) : (\n        <DesktopView title={title} body={body} image={image} />\n      )}\n    </>\n  );\n};\n\nLeftTextSection.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  body: PropTypes.array.isRequired,\n};\n\nexport default LeftTextSection;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  grid-column: 2/12;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  height: 745px;\n\n  @media (min-width: 1024px) {\n    height: 745px;\n  }\n`;\n\nconst Text = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  height: 316px;\n`;\n\nconst Children = styled.div`\n  width: 371px;\n  height: 226px;\n  background: #c4c4c4;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst EmbeddedForm = ({ title, body, children }) => (\n  <Container>\n    <Text>\n      <h1>{title}</h1>\n      {body.map((text, index) => (\n        <p key={`${index}-${title}`} data-testid='section-text'>\n          {text}\n        </p>\n      ))}\n    </Text>\n    <Children>{children}</Children>\n  </Container>\n);\n\nEmbeddedForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.array.isRequired,\n  children: PropTypes.node,\n};\n\nexport default EmbeddedForm;\n","import React from 'react';\n\nconst Chevron = () => (\n  <svg\n    width='54'\n    height='54'\n    viewBox='0 0 54 54'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'>\n    <g clipPath='url(#clip0)'>\n      <path\n        d='M52.7401 18.3601C56.8801 31.1401 51.1201 45.1801 39.0601 51.1201C37.9801 51.6601 36.7201 52.2001 35.6401 52.5601C22.8601 56.8801 8.82009 51.1201 2.88009 39.0601C2.16008 37.9801 1.80009 36.7201 1.44008 35.4601C-2.69992 22.6801 3.06008 8.64007 15.1201 2.70007C16.2001 2.16007 17.4601 1.62007 18.5401 1.26007C31.3201 -2.87993 45.3601 2.88007 51.3001 14.9401C51.8401 16.0201 52.3801 17.1001 52.7401 18.3601ZM4.50008 23.9401C2.88008 36.5401 11.5201 47.8801 24.1201 49.5001C36.7201 51.1201 48.0601 42.3001 49.6801 29.8801C51.3001 17.4601 42.4801 5.94007 30.0601 4.32007C28.0801 4.14007 26.1001 4.14007 24.1201 4.32007C13.8601 5.76007 5.76008 13.6801 4.50008 23.9401ZM37.0801 21.9601L27.0001 32.0401L16.9201 21.9601C16.0201 21.0601 14.7601 21.0601 14.0401 21.9601C13.1401 22.8601 13.1401 24.1201 14.0401 25.0201L27.0001 37.9801L40.1401 24.8401C41.0401 23.9401 41.0401 22.6801 40.1401 21.7801C39.2401 21.0601 37.9801 21.0601 37.0801 21.9601Z'\n        fill='black'\n      />\n    </g>\n    <defs>\n      <clipPath id='clip0'>\n        <rect\n          width='54'\n          height='54'\n          fill='white'\n          transform='translate(0 54) rotate(-90)'\n        />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport default Chevron;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Chevron from '../Chevron';\n\nconst StyledButton = styled.div`\n  grid-column: 1/-1;\n  padding-bottom: 25px;\n`;\n\nconst Button = ({ onClick, sectionId }) => {\n  return (\n    <StyledButton onClick={() => onClick(sectionId + 1)}>\n      <Chevron />\n    </StyledButton>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport CentredSection from './CentredSection';\nimport RightTextSection from './RightTextSection';\nimport LeftTextSection from './LeftTextSection';\nimport EmbeddedForm from './EmbeddedForm';\nimport Button from '../Button';\n\nconst handleBackgroundColour = (alignment) => {\n  switch (alignment) {\n    case 'left':\n      return '#EBEBEB';\n    case 'centre':\n      return '#f4f4f4';\n    default:\n      return '#fff';\n  }\n};\n\nconst Container = styled.div`\n  display: grid;\n  grid-gap: 24px;\n  grid-template-columns: repeat(12, 1fr);\n  min-height: 422px;\n`;\n\nconst Wrapper = styled.div`\n  background-color: ${({ alignment }) => handleBackgroundColour(alignment)};\n  grid-column: 1/-1;\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  justify-items: center;\n  align-items: center;\n\n  /* @media (min-width: 1024px) {\n    display: grid;\n    grid-template-columns: repeat(12, 1fr);\n    justify-items: center;\n    align-items: center;\n    height: 745px;\n  } */\n`;\n\nconst Section = React.forwardRef(({ section, onClick, id }, ref) => {\n  const { alignment, image, title, body } = section;\n\n  const SECTIONS = {\n    centre: <CentredSection title={title} body={body} />,\n    left: <LeftTextSection title={title} body={body} image={image} />,\n    right: <RightTextSection title={title} body={body} image={image} />,\n    none: (\n      <EmbeddedForm title={title} body={body}>\n        Chat / Form\n      </EmbeddedForm>\n    ),\n  };\n\n  return (\n    <Container ref={ref}>\n      <Wrapper alignment={alignment}>\n        {SECTIONS[alignment]}{' '}\n        {alignment !== 'none' && <Button onClick={onClick} sectionId={id} />}\n      </Wrapper>\n    </Container>\n  );\n});\n\nSection.propTypes = {\n  sections: PropTypes.shape({\n    alignment: PropTypes.string.isRequired,\n    image: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    body: PropTypes.array.isRequired,\n  }),\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Section from '../Section';\n\nconst Sections = ({ sections }) => {\n  const refs = [];\n  sections.forEach((_) => {\n    refs.push(React.createRef(null));\n  });\n\n  const handleClick = (id) => {\n    console.log(id);\n    console.log(sections.length);\n    refs[id].current.scrollIntoView({\n      behavior: 'smooth',\n      block: 'start',\n    });\n  };\n\n  return (\n    <>\n      {sections.map((section, index) => (\n        <Section\n          key={section.title}\n          section={section}\n          ref={refs[index]}\n          onClick={handleClick}\n          id={index}\n        />\n      ))}\n    </>\n  );\n};\n\nSections.propTypes = {\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      alignment: PropTypes.string.isRequired,\n      image: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      body: PropTypes.array.isRequired,\n    })\n  ),\n};\n\nexport default Sections;\n","import Awareness from './assets/awareness.svg';\nimport Support from './assets/support.svg';\nimport Progression from './assets/progression.svg';\nimport Proficiency from './assets/proficiency.svg';\nimport Team from './assets/team.svg';\n\nexport const content = {\n  headerButton: 'Get Involved',\n  sections: [\n    {\n      alignment: 'centre',\n      title: 'Tech through our eyes',\n      body: [\n        'Yo! Welcome to Froware, a community platform for Black professionals working and aspiring to work in any field of tech.',\n      ],\n    },\n    {\n      alignment: 'left',\n      image: Awareness,\n      title: 'Awareness',\n      body: [\n        `As a Black professional in the tech industry, it’s not always easy to have visibility of the expertise, resources and opportunities that exist across our community.`,\n        `We’re building a hub to signpost the content, experts, events (and more!) that you should know about.`,\n      ],\n    },\n    {\n      alignment: 'right',\n      image: Support,\n      title: 'Support',\n      body: [\n        `Being a minority group in our industry, many of us have shared experiences of awkwardness, isolation and even hostility in the workplace caused or exacerbated by cultural differences.`,\n        `We’re creating a safe community where you can meet, converse, learn, collaborate and socialise with your peers.`,\n      ],\n    },\n    {\n      alignment: 'left',\n      image: Progression,\n      title: 'Progression',\n      body: [\n        `In an industry that still has a long way to go towards genuine equality, it can often be challenging for Black professionals to find and seize the opportunities they deserve.`,\n        `Whether you’re a doer, a builder, a thinker or a creator, we’re committed to developing effective pathways to help you progress and succeed.`,\n      ],\n    },\n    {\n      alignment: 'right',\n      image: Proficiency,\n      title: 'Proficiency',\n      body: [\n        `In an industry that is inherently biased against minority groups, any perceived incompetence in one individual can be reflected in future prejudice against the entire community.`,\n        `We want to ensure that Black professionals are seen as not just valuable, but invaluable, through our collective level of expertise.`,\n      ],\n    },\n    {\n      alignment: 'left',\n      image: Team,\n      title: 'Team',\n      body: [\n        `We’re a diverse team of experienced professionals with a broad range of skills and backgrounds, but with a shared passion for helping our community to excel in the tech industry.`,\n      ],\n    },\n    {\n      alignment: 'none',\n      title: 'Get Involved',\n      body: [\n        `Now that you know all about us, we’d love to learn more about you. Let’s chat!`,\n      ],\n    },\n  ],\n  footer: {\n    blurb: '© Copyright 2020, All Rights Reserved - Froware',\n    social: {\n      facebook: 'froware',\n      instagram: 'froware',\n      twitter: 'froware',\n      linkedin: 'froware',\n    },\n  },\n};\n","export default __webpack_public_path__ + \"static/media/awareness.d6ed3e0c.svg\";","export default __webpack_public_path__ + \"static/media/support.6e138b3f.svg\";","export default __webpack_public_path__ + \"static/media/progression.5c268b15.svg\";","export default __webpack_public_path__ + \"static/media/proficiency.9c346b29.svg\";","export default __webpack_public_path__ + \"static/media/team.aaca10e2.svg\";","export default __webpack_public_path__ + \"static/media/facebook.2348e5f0.svg\";","export default __webpack_public_path__ + \"static/media/instagram.3f8d5bcb.svg\";","export default __webpack_public_path__ + \"static/media/linkedin.bbf46331.svg\";","export default __webpack_public_path__ + \"static/media/twitter.6b4476b4.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Logo from '../Logo';\nimport Facebook from '../../assets/facebook.svg';\nimport Instagram from '../../assets/instagram.svg';\nimport Linkedin from '../../assets/linkedin.svg';\nimport Twitter from '../../assets/twitter.svg';\n\nconst Container = styled.footer`\n  background-color: #000;\n  color: #fff;\n  height: 256px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InnerWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: column;\n  height: 173px;\n\n  span {\n    font-size: 70%;\n\n    @media (min-width: 1024px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst SocialMedias = styled.div`\n  display: inline-block;\n\n  a {\n    margin-right: 20px;\n  }\n`;\n\nconst ICONS = {\n  facebook: Facebook,\n  instagram: Instagram,\n  linkedin: Linkedin,\n  twitter: Twitter,\n};\n\nconst Footer = ({ content: { social, blurb } }) => (\n  <Container>\n    <InnerWrapper>\n      <Logo fill='#fff' />\n      <SocialMedias>\n        {Object.entries(social).map(([key, value]) => (\n          <a key={key} href={`https://${key}.com/${value}`}>\n            <img src={ICONS[key]} alt={`${value}-${key}`} />\n          </a>\n        ))}\n      </SocialMedias>\n      <span>{blurb}</span>\n    </InnerWrapper>\n  </Container>\n);\n\nFooter.propTypes = {\n  content: PropTypes.shape({\n    social: PropTypes.shape({\n      facebook: PropTypes.string.isRequired,\n      instagram: PropTypes.string.isRequired,\n      linkedin: PropTypes.string.isRequired,\n      twitter: PropTypes.string.isRequired,\n    }),\n    blurb: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Footer;\n","import React from 'react';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { GlobalStyle } from './styles/globals';\nimport Header from './components/Header/';\nimport Sections from './components/Sections/';\nimport { content } from './content';\nimport Footer from './components/Footer';\n\nconst App = () => (\n  <HelmetProvider>\n    <Helmet>\n      <meta charSet='utf-8' />\n      <title>Froware</title>\n      <link\n        href='https://fonts.googleapis.com/css2?family=Nunito+Sans:wght@400;700;900&display=swap'\n        rel='stylesheet'\n      />\n    </Helmet>\n    <GlobalStyle />\n    <Header buttonText={content.headerButton} />\n    <Sections sections={content.sections} />\n    <Footer content={content.footer} />\n  </HelmetProvider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}